<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Globals">
    <ProjectGuid>{558D1ADE-D5D5-4123-AD31-32F0DBD7B6AB}</ProjectGuid>
    <RootNamespace>crypto</RootNamespace>
  </PropertyGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="smp.props" />
    <Import Project="libcrypto_files.props" />
  </ImportGroup>
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\yasm.props" />
  </ImportGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;OPENSSL_NO_DYNAMIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl ..\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl ..\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl ..\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl ..\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl ..\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl ..\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl ..\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl ..\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl ..\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl ..\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl ..\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl ..\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl ..\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl ..\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl ..\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl ..\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl ..\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl ..\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl ..\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl ..\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl ..\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl ..\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl ..\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_NO_DYNAMIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
if not exist .\crypto\x86_64cpuid.asm (
perl ..\crypto\x86_64cpuid.pl nasm .\crypto\x86_64cpuid.asm
)
if not exist .\crypto\md5-x86_64.asm (
perl ..\crypto\md5\asm\md5-x86_64.pl nasm .\crypto\md5-x86_64.asm
)
if not exist .\crypto\sha1-x86_64.asm (
perl ..\crypto\sha\asm\sha1-x86_64.pl nasm .\crypto\sha1-x86_64.asm
)
if not exist .\crypto\sha256-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha256-x86_64.asm
)
if not exist .\crypto\sha512-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha512-x86_64.asm
)
if not exist .\crypto\rc4-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-x86_64.pl nasm .\crypto\rc4-x86_64.asm
)
if not exist .\crypto\rc4-md5-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-md5-x86_64.pl nasm .\crypto\rc4-md5-x86_64.asm
)
if not exist .\crypto\aes-x86_64.asm (
perl ..\crypto\aes\asm\aes-x86_64.pl nasm .\crypto\aes-x86_64.asm
)
if not exist .\crypto\vpaes-x86_64.asm (
perl ..\crypto\aes\asm\vpaes-x86_64.pl nasm .\crypto\vpaes-x86_64.asm
)
if not exist .\crypto\bsaes-x86_64.asm (
perl ..\crypto\aes\asm\bsaes-x86_64.pl nasm .\crypto\bsaes-x86_64.asm
)
if not exist .\crypto\aesni-x86_64.asm (
perl ..\crypto\aes\asm\aesni-x86_64.pl nasm .\crypto\aesni-x86_64.asm
)
if not exist .\crypto\aesni-sha1-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha1-x86_64.pl nasm .\crypto\aesni-sha1-x86_64.asm
)
if not exist .\crypto\cmll-x86_64.asm (
perl ..\crypto\camellia\asm\cmll-x86_64.pl nasm .\crypto\cmll-x86_64.asm
)
if not exist .\crypto\ghash-x86_64.asm (
perl ..\crypto\modes\asm\ghash-x86_64.pl nasm .\crypto\ghash-x86_64.asm
)
if not exist .\crypto\x86_64-mont.asm (
perl ..\crypto\bn\asm\x86_64-mont.pl nasm .\crypto\x86_64-mont.asm
)
if not exist .\crypto\x86_64-mont5.asm (
perl ..\crypto\bn\asm\x86_64-mont5.pl nasm .\crypto\x86_64-mont5.asm
)
if not exist .\crypto\x86_64-gf2m.asm (
perl ..\crypto\bn\asm\x86_64-gf2m.pl nasm .\crypto\x86_64-gf2m.asm
)
if not exist .\crypto\wp-x86_64.asm (
perl ..\crypto\whrlpool\asm\wp-x86_64.pl nasm .\crypto\wp-x86_64.asm
)
if not exist .\crypto\rsaz-x86_64.asm (
perl ..\crypto\bn\asm\rsaz-x86_64.pl nasm .\crypto\rsaz-x86_64.asm
)
if not exist .\crypto\rsaz-avx2.asm (
perl ..\crypto\bn\asm\rsaz-avx2.pl nasm .\crypto\rsaz-avx2.asm
)
if not exist .\crypto\aesni-mb-x86_64.asm (
perl ..\crypto\aes\asm\aesni-mb-x86_64.pl nasm .\crypto\aesni-mb-x86_64.asm
)
if not exist .\crypto\aesni-sha256-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha256-x86_64.pl nasm .\crypto\aesni-sha256-x86_64.asm
)
if not exist .\crypto\aesni-gcm-x86_64.asm (
perl ..\crypto\modes\asm\aesni-gcm-x86_64.pl nasm .\crypto\aesni-gcm-x86_64.asm
)
if not exist .\crypto\sha1-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha1-mb-x86_64.pl nasm .\crypto\sha1-mb-x86_64.asm
)
if not exist .\crypto\sha256-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha256-mb-x86_64.pl nasm .\crypto\sha256-mb-x86_64.asm
)
if not exist .\crypto\chacha-x86_64.asm (
perl ..\crypto\chacha\asm\chacha-x86_64.pl nasm .\crypto\chacha-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-x86_64.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86_64.pl nasm .\crypto\ecp_nistz256-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-avx2.asm (
perl ..\crypto\ec\asm\ecp_nistz256-avx2.pl nasm .\crypto\ecp_nistz256-avx2.asm
)
if not exist .\crypto\poly1305-x86_64.asm (
perl ..\crypto\poly1305\asm\poly1305-x86_64.pl nasm .\crypto\poly1305-x86_64.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;OPENSSL_NO_STATIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl ..\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl ..\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl ..\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl ..\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl ..\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl ..\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl ..\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl ..\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl ..\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl ..\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl ..\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl ..\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl ..\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl ..\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl ..\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl ..\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl ..\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl ..\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl ..\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl ..\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl ..\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl ..\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl ..\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_NO_STATIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
if not exist .\crypto\x86_64cpuid.asm (
perl ..\crypto\x86_64cpuid.pl nasm .\crypto\x86_64cpuid.asm
)
if not exist .\crypto\md5-x86_64.asm (
perl ..\crypto\md5\asm\md5-x86_64.pl nasm .\crypto\md5-x86_64.asm
)
if not exist .\crypto\sha1-x86_64.asm (
perl ..\crypto\sha\asm\sha1-x86_64.pl nasm .\crypto\sha1-x86_64.asm
)
if not exist .\crypto\sha256-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha256-x86_64.asm
)
if not exist .\crypto\sha512-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha512-x86_64.asm
)
if not exist .\crypto\rc4-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-x86_64.pl nasm .\crypto\rc4-x86_64.asm
)
if not exist .\crypto\rc4-md5-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-md5-x86_64.pl nasm .\crypto\rc4-md5-x86_64.asm
)
if not exist .\crypto\aes-x86_64.asm (
perl ..\crypto\aes\asm\aes-x86_64.pl nasm .\crypto\aes-x86_64.asm
)
if not exist .\crypto\vpaes-x86_64.asm (
perl ..\crypto\aes\asm\vpaes-x86_64.pl nasm .\crypto\vpaes-x86_64.asm
)
if not exist .\crypto\bsaes-x86_64.asm (
perl ..\crypto\aes\asm\bsaes-x86_64.pl nasm .\crypto\bsaes-x86_64.asm
)
if not exist .\crypto\aesni-x86_64.asm (
perl ..\crypto\aes\asm\aesni-x86_64.pl nasm .\crypto\aesni-x86_64.asm
)
if not exist .\crypto\aesni-sha1-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha1-x86_64.pl nasm .\crypto\aesni-sha1-x86_64.asm
)
if not exist .\crypto\cmll-x86_64.asm (
perl ..\crypto\camellia\asm\cmll-x86_64.pl nasm .\crypto\cmll-x86_64.asm
)
if not exist .\crypto\ghash-x86_64.asm (
perl ..\crypto\modes\asm\ghash-x86_64.pl nasm .\crypto\ghash-x86_64.asm
)
if not exist .\crypto\x86_64-mont.asm (
perl ..\crypto\bn\asm\x86_64-mont.pl nasm .\crypto\x86_64-mont.asm
)
if not exist .\crypto\x86_64-mont5.asm (
perl ..\crypto\bn\asm\x86_64-mont5.pl nasm .\crypto\x86_64-mont5.asm
)
if not exist .\crypto\x86_64-gf2m.asm (
perl ..\crypto\bn\asm\x86_64-gf2m.pl nasm .\crypto\x86_64-gf2m.asm
)
if not exist .\crypto\wp-x86_64.asm (
perl ..\crypto\whrlpool\asm\wp-x86_64.pl nasm .\crypto\wp-x86_64.asm
)
if not exist .\crypto\rsaz-x86_64.asm (
perl ..\crypto\bn\asm\rsaz-x86_64.pl nasm .\crypto\rsaz-x86_64.asm
)
if not exist .\crypto\rsaz-avx2.asm (
perl ..\crypto\bn\asm\rsaz-avx2.pl nasm .\crypto\rsaz-avx2.asm
)
if not exist .\crypto\aesni-mb-x86_64.asm (
perl ..\crypto\aes\asm\aesni-mb-x86_64.pl nasm .\crypto\aesni-mb-x86_64.asm
)
if not exist .\crypto\aesni-sha256-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha256-x86_64.pl nasm .\crypto\aesni-sha256-x86_64.asm
)
if not exist .\crypto\aesni-gcm-x86_64.asm (
perl ..\crypto\modes\asm\aesni-gcm-x86_64.pl nasm .\crypto\aesni-gcm-x86_64.asm
)
if not exist .\crypto\sha1-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha1-mb-x86_64.pl nasm .\crypto\sha1-mb-x86_64.asm
)
if not exist .\crypto\sha256-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha256-mb-x86_64.pl nasm .\crypto\sha256-mb-x86_64.asm
)
if not exist .\crypto\chacha-x86_64.asm (
perl ..\crypto\chacha\asm\chacha-x86_64.pl nasm .\crypto\chacha-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-x86_64.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86_64.pl nasm .\crypto\ecp_nistz256-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-avx2.asm (
perl ..\crypto\ec\asm\ecp_nistz256-avx2.pl nasm .\crypto\ecp_nistz256-avx2.asm
)
if not exist .\crypto\poly1305-x86_64.asm (
perl ..\crypto\poly1305\asm\poly1305-x86_64.pl nasm .\crypto\poly1305-x86_64.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;OPENSSL_NO_DYNAMIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl ..\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl ..\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl ..\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl ..\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl ..\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl ..\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl ..\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl ..\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl ..\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl ..\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl ..\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl ..\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl ..\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl ..\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl ..\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl ..\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl ..\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl ..\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl ..\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl ..\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl ..\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl ..\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl ..\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_NO_DYNAMIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
if not exist .\crypto\x86_64cpuid.asm (
perl ..\crypto\x86_64cpuid.pl nasm .\crypto\x86_64cpuid.asm
)
if not exist .\crypto\md5-x86_64.asm (
perl ..\crypto\md5\asm\md5-x86_64.pl nasm .\crypto\md5-x86_64.asm
)
if not exist .\crypto\sha1-x86_64.asm (
perl ..\crypto\sha\asm\sha1-x86_64.pl nasm .\crypto\sha1-x86_64.asm
)
if not exist .\crypto\sha256-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha256-x86_64.asm
)
if not exist .\crypto\sha512-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha512-x86_64.asm
)
if not exist .\crypto\rc4-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-x86_64.pl nasm .\crypto\rc4-x86_64.asm
)
if not exist .\crypto\rc4-md5-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-md5-x86_64.pl nasm .\crypto\rc4-md5-x86_64.asm
)
if not exist .\crypto\aes-x86_64.asm (
perl ..\crypto\aes\asm\aes-x86_64.pl nasm .\crypto\aes-x86_64.asm
)
if not exist .\crypto\vpaes-x86_64.asm (
perl ..\crypto\aes\asm\vpaes-x86_64.pl nasm .\crypto\vpaes-x86_64.asm
)
if not exist .\crypto\bsaes-x86_64.asm (
perl ..\crypto\aes\asm\bsaes-x86_64.pl nasm .\crypto\bsaes-x86_64.asm
)
if not exist .\crypto\aesni-x86_64.asm (
perl ..\crypto\aes\asm\aesni-x86_64.pl nasm .\crypto\aesni-x86_64.asm
)
if not exist .\crypto\aesni-sha1-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha1-x86_64.pl nasm .\crypto\aesni-sha1-x86_64.asm
)
if not exist .\crypto\cmll-x86_64.asm (
perl ..\crypto\camellia\asm\cmll-x86_64.pl nasm .\crypto\cmll-x86_64.asm
)
if not exist .\crypto\ghash-x86_64.asm (
perl ..\crypto\modes\asm\ghash-x86_64.pl nasm .\crypto\ghash-x86_64.asm
)
if not exist .\crypto\x86_64-mont.asm (
perl ..\crypto\bn\asm\x86_64-mont.pl nasm .\crypto\x86_64-mont.asm
)
if not exist .\crypto\x86_64-mont5.asm (
perl ..\crypto\bn\asm\x86_64-mont5.pl nasm .\crypto\x86_64-mont5.asm
)
if not exist .\crypto\x86_64-gf2m.asm (
perl ..\crypto\bn\asm\x86_64-gf2m.pl nasm .\crypto\x86_64-gf2m.asm
)
if not exist .\crypto\wp-x86_64.asm (
perl ..\crypto\whrlpool\asm\wp-x86_64.pl nasm .\crypto\wp-x86_64.asm
)
if not exist .\crypto\rsaz-x86_64.asm (
perl ..\crypto\bn\asm\rsaz-x86_64.pl nasm .\crypto\rsaz-x86_64.asm
)
if not exist .\crypto\rsaz-avx2.asm (
perl ..\crypto\bn\asm\rsaz-avx2.pl nasm .\crypto\rsaz-avx2.asm
)
if not exist .\crypto\aesni-mb-x86_64.asm (
perl ..\crypto\aes\asm\aesni-mb-x86_64.pl nasm .\crypto\aesni-mb-x86_64.asm
)
if not exist .\crypto\aesni-sha256-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha256-x86_64.pl nasm .\crypto\aesni-sha256-x86_64.asm
)
if not exist .\crypto\aesni-gcm-x86_64.asm (
perl ..\crypto\modes\asm\aesni-gcm-x86_64.pl nasm .\crypto\aesni-gcm-x86_64.asm
)
if not exist .\crypto\sha1-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha1-mb-x86_64.pl nasm .\crypto\sha1-mb-x86_64.asm
)
if not exist .\crypto\sha256-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha256-mb-x86_64.pl nasm .\crypto\sha256-mb-x86_64.asm
)
if not exist .\crypto\chacha-x86_64.asm (
perl ..\crypto\chacha\asm\chacha-x86_64.pl nasm .\crypto\chacha-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-x86_64.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86_64.pl nasm .\crypto\ecp_nistz256-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-avx2.asm (
perl ..\crypto\ec\asm\ecp_nistz256-avx2.pl nasm .\crypto\ecp_nistz256-avx2.asm
)
if not exist .\crypto\poly1305-x86_64.asm (
perl ..\crypto\poly1305\asm\poly1305-x86_64.pl nasm .\crypto\poly1305-x86_64.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;OPENSSL_NO_STATIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl ..\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl ..\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl ..\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl ..\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl ..\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl ..\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl ..\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl ..\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl ..\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl ..\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl ..\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl ..\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl ..\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl ..\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl ..\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl ..\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl ..\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl ..\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl ..\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl ..\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl ..\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl ..\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl ..\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <PreprocessorDefinitions>DSO_OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_NO_STATIC_ENGINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;..\include;..\crypto\include;.\crypto\include;..\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy ..\include\openssl\*.h "$(OutDir)"\include\openssl
copy .\openssl\opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy ..\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\include\openssl\opensslconf.h (
del ..\include\openssl\opensslconf.h
)
if not exist .\crypto\x86_64cpuid.asm (
perl ..\crypto\x86_64cpuid.pl nasm .\crypto\x86_64cpuid.asm
)
if not exist .\crypto\md5-x86_64.asm (
perl ..\crypto\md5\asm\md5-x86_64.pl nasm .\crypto\md5-x86_64.asm
)
if not exist .\crypto\sha1-x86_64.asm (
perl ..\crypto\sha\asm\sha1-x86_64.pl nasm .\crypto\sha1-x86_64.asm
)
if not exist .\crypto\sha256-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha256-x86_64.asm
)
if not exist .\crypto\sha512-x86_64.asm (
perl ..\crypto\sha\asm\sha512-x86_64.pl nasm .\crypto\sha512-x86_64.asm
)
if not exist .\crypto\rc4-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-x86_64.pl nasm .\crypto\rc4-x86_64.asm
)
if not exist .\crypto\rc4-md5-x86_64.asm (
perl ..\crypto\rc4\asm\rc4-md5-x86_64.pl nasm .\crypto\rc4-md5-x86_64.asm
)
if not exist .\crypto\aes-x86_64.asm (
perl ..\crypto\aes\asm\aes-x86_64.pl nasm .\crypto\aes-x86_64.asm
)
if not exist .\crypto\vpaes-x86_64.asm (
perl ..\crypto\aes\asm\vpaes-x86_64.pl nasm .\crypto\vpaes-x86_64.asm
)
if not exist .\crypto\bsaes-x86_64.asm (
perl ..\crypto\aes\asm\bsaes-x86_64.pl nasm .\crypto\bsaes-x86_64.asm
)
if not exist .\crypto\aesni-x86_64.asm (
perl ..\crypto\aes\asm\aesni-x86_64.pl nasm .\crypto\aesni-x86_64.asm
)
if not exist .\crypto\aesni-sha1-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha1-x86_64.pl nasm .\crypto\aesni-sha1-x86_64.asm
)
if not exist .\crypto\cmll-x86_64.asm (
perl ..\crypto\camellia\asm\cmll-x86_64.pl nasm .\crypto\cmll-x86_64.asm
)
if not exist .\crypto\ghash-x86_64.asm (
perl ..\crypto\modes\asm\ghash-x86_64.pl nasm .\crypto\ghash-x86_64.asm
)
if not exist .\crypto\x86_64-mont.asm (
perl ..\crypto\bn\asm\x86_64-mont.pl nasm .\crypto\x86_64-mont.asm
)
if not exist .\crypto\x86_64-mont5.asm (
perl ..\crypto\bn\asm\x86_64-mont5.pl nasm .\crypto\x86_64-mont5.asm
)
if not exist .\crypto\x86_64-gf2m.asm (
perl ..\crypto\bn\asm\x86_64-gf2m.pl nasm .\crypto\x86_64-gf2m.asm
)
if not exist .\crypto\wp-x86_64.asm (
perl ..\crypto\whrlpool\asm\wp-x86_64.pl nasm .\crypto\wp-x86_64.asm
)
if not exist .\crypto\rsaz-x86_64.asm (
perl ..\crypto\bn\asm\rsaz-x86_64.pl nasm .\crypto\rsaz-x86_64.asm
)
if not exist .\crypto\rsaz-avx2.asm (
perl ..\crypto\bn\asm\rsaz-avx2.pl nasm .\crypto\rsaz-avx2.asm
)
if not exist .\crypto\aesni-mb-x86_64.asm (
perl ..\crypto\aes\asm\aesni-mb-x86_64.pl nasm .\crypto\aesni-mb-x86_64.asm
)
if not exist .\crypto\aesni-sha256-x86_64.asm (
perl ..\crypto\aes\asm\aesni-sha256-x86_64.pl nasm .\crypto\aesni-sha256-x86_64.asm
)
if not exist .\crypto\aesni-gcm-x86_64.asm (
perl ..\crypto\modes\asm\aesni-gcm-x86_64.pl nasm .\crypto\aesni-gcm-x86_64.asm
)
if not exist .\crypto\sha1-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha1-mb-x86_64.pl nasm .\crypto\sha1-mb-x86_64.asm
)
if not exist .\crypto\sha256-mb-x86_64.asm (
perl ..\crypto\sha\asm\sha256-mb-x86_64.pl nasm .\crypto\sha256-mb-x86_64.asm
)
if not exist .\crypto\chacha-x86_64.asm (
perl ..\crypto\chacha\asm\chacha-x86_64.pl nasm .\crypto\chacha-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-x86_64.asm (
perl ..\crypto\ec\asm\ecp_nistz256-x86_64.pl nasm .\crypto\ecp_nistz256-x86_64.asm
)
if not exist .\crypto\ecp_nistz256-avx2.asm (
perl ..\crypto\ec\asm\ecp_nistz256-avx2.pl nasm .\crypto\ecp_nistz256-avx2.asm
)
if not exist .\crypto\poly1305-x86_64.asm (
perl ..\crypto\poly1305\asm\poly1305-x86_64.pl nasm .\crypto\poly1305-x86_64.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\yasm.targets" />
  </ImportGroup>
</Project>